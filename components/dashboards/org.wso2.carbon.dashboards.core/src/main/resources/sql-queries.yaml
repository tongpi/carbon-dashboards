#
# Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# WSO2 Inc. licenses this file to you under the Apache License,
# Version 2.0 (the "License"); you may not use this file except
# in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

queries:
  -
    mappings:
      table_check: ~
      create_dashboard_resource_table: ~
      create_widget_resource_table: ~
      add_dashboard: ~
      add_widget_config: ~
      update_widget_config: ~
      get_widget_config: ~
      get_widget_name_id_map: ~
      delete_widget_by_id: ~
      get_dashboard_by_url: ~
      get_dashboard_metadata_list: ~
      delete_dashboard_by_url: ~
      update_dashboard_content: ~
    type: default
    version: default
  -
    mappings:
      table_check: SELECT 1 FROM {{TABLE_NAME}} LIMIT 1
      create_dashboard_resource_table: CREATE TABLE DASHBOARD_RESOURCE (URL VARCHAR(100) NOT NULL, OWNER VARCHAR(100) NOT NULL, NAME VARCHAR(255) NOT NULL, DESCRIPTION VARCHAR(1000), PARENT_ID INTEGER NOT NULL, LANDING_PAGE VARCHAR(100), CONTENT LONGBLOB, CONSTRAINT PK_DASHBOARD_RESOURCE PRIMARY KEY (URL,OWNER))
      create_widget_resource_table: CREATE TABLE WIDGET_RESOURCE (WIDGET_ID VARCHAR(255) NOT NULL, WIDGET_NAME VARCHAR(255) NOT NULL, WIDGET_CONFIGS LONGBLOB, CONSTRAINT PK_WIDGET_RESOURCE PRIMARY KEY (WIDGET_ID, WIDGET_NAME))
      add_dashboard: INSERT INTO DASHBOARD_RESOURCE (URL, OWNER, NAME, DESCRIPTION, PARENT_ID , LANDING_PAGE, CONTENT) VALUES (?, ?, ?, ?, ?, ?, ?)
      add_widget_config: INSERT INTO WIDGET_RESOURCE (WIDGET_ID, WIDGET_NAME, WIDGET_CONFIGS) VALUES (?, ?, ?)
      update_widget_config: UPDATE WIDGET_RESOURCE SET WIDGET_CONFIGS = ? WHERE WIDGET_ID = ?
      get_widget_config: SELECT WIDGET_NAME, WIDGET_CONFIGS FROM WIDGET_RESOURCE WHERE WIDGET_ID = ?
      get_widget_name_id_map: SELECT WIDGET_ID, WIDGET_NAME, WIDGET_CONFIGS FROM WIDGET_RESOURCE
      delete_widget_by_id: DELETE FROM WIDGET_RESOURCE WHERE WIDGET_ID = ?
      get_dashboard_by_url: SELECT URL, OWNER, NAME, DESCRIPTION, PARENT_ID, LANDING_PAGE, CONTENT FROM DASHBOARD_RESOURCE WHERE URL = ?
      get_dashboard_metadata_list: SELECT URL, OWNER, NAME, DESCRIPTION, PARENT_ID, LANDING_PAGE FROM DASHBOARD_RESOURCE
      delete_dashboard_by_url: DELETE FROM DASHBOARD_RESOURCE WHERE URL = ?
      update_dashboard_content: UPDATE DASHBOARD_RESOURCE SET NAME = ?, DESCRIPTION = ?, CONTENT = ?, PARENT_ID = ?, LANDING_PAGE = ? WHERE URL = ?
    type: H2
    version: default
  -
    mappings:
      table_check: SELECT 1 FROM {{TABLE_NAME}} LIMIT 1
      create_dashboard_resource_table: CREATE TABLE DASHBOARD_RESOURCE (URL VARCHAR(100) NOT NULL, OWNER VARCHAR(100) NOT NULL, NAME VARCHAR(255) NOT NULL, DESCRIPTION VARCHAR(1000), PARENT_ID INTEGER NOT NULL, LANDING_PAGE VARCHAR(100), CONTENT LONGBLOB, CONSTRAINT PK_DASHBOARD_RESOURCE PRIMARY KEY (URL,OWNER))
      create_widget_resource_table: CREATE TABLE WIDGET_RESOURCE (WIDGET_ID VARCHAR(255) NOT NULL, WIDGET_NAME VARCHAR(255) NOT NULL, WIDGET_CONFIGS LONGBLOB, CONSTRAINT PK_WIDGET_RESOURCE PRIMARY KEY (WIDGET_ID, WIDGET_NAME))
      add_dashboard: INSERT INTO DASHBOARD_RESOURCE (URL, OWNER, NAME, DESCRIPTION, PARENT_ID , LANDING_PAGE, CONTENT) VALUES (?, ?, ?, ?, ?, ?, ?)
      add_widget_config: INSERT INTO WIDGET_RESOURCE (WIDGET_ID, WIDGET_NAME, WIDGET_CONFIGS) VALUES (?, ?, ?)
      update_widget_config: UPDATE WIDGET_RESOURCE SET WIDGET_CONFIGS = ? WHERE WIDGET_ID = ?
      get_widget_config: SELECT WIDGET_NAME, WIDGET_CONFIGS FROM WIDGET_RESOURCE WHERE WIDGET_ID = ?
      get_widget_name_id_map: SELECT WIDGET_ID, WIDGET_NAME, WIDGET_CONFIGS FROM WIDGET_RESOURCE
      delete_widget_by_id: DELETE FROM WIDGET_RESOURCE WHERE WIDGET_ID = ?
      get_dashboard_by_url: SELECT URL, OWNER, NAME, DESCRIPTION, PARENT_ID, LANDING_PAGE, CONTENT FROM DASHBOARD_RESOURCE WHERE URL = ?
      get_dashboard_metadata_list: SELECT URL, OWNER, NAME, DESCRIPTION, PARENT_ID, LANDING_PAGE FROM DASHBOARD_RESOURCE
      delete_dashboard_by_url: DELETE FROM DASHBOARD_RESOURCE WHERE URL = ?
      update_dashboard_content: UPDATE DASHBOARD_RESOURCE SET NAME = ?, DESCRIPTION = ?, CONTENT = ?, PARENT_ID = ?, LANDING_PAGE = ? WHERE URL = ?
    type: MySQL
    version: default
  -
    mappings:
      table_check: SELECT 1 FROM {{TABLE_NAME}} LIMIT 1
      create_dashboard_resource_table: CREATE TABLE DASHBOARD_RESOURCE (URL VARCHAR(100) NOT NULL, OWNER VARCHAR(100) NOT NULL, NAME VARCHAR(255) NOT NULL, DESCRIPTION VARCHAR(1000), PARENT_ID INTEGER NOT NULL, LANDING_PAGE VARCHAR(100), CONTENT BYTEA, CONSTRAINT PK_DASHBOARD_RESOURCE PRIMARY KEY (URL,OWNER))
      create_widget_resource_table: CREATE TABLE WIDGET_RESOURCE (WIDGET_ID VARCHAR(255) NOT NULL, WIDGET_NAME VARCHAR(255) NOT NULL, WIDGET_CONFIGS BYTEA, CONSTRAINT PK_WIDGET_RESOURCE PRIMARY KEY (WIDGET_ID, WIDGET_NAME))
      add_dashboard: INSERT INTO DASHBOARD_RESOURCE (URL, OWNER, NAME, DESCRIPTION, PARENT_ID , LANDING_PAGE, CONTENT) VALUES (?, ?, ?, ?, ?, ?, ?)
      add_widget_config: INSERT INTO WIDGET_RESOURCE (WIDGET_ID, WIDGET_NAME, WIDGET_CONFIGS) VALUES (?, ?, ?)
      update_widget_config: UPDATE WIDGET_RESOURCE SET WIDGET_CONFIGS = ? WHERE WIDGET_ID = ?
      get_widget_config: SELECT WIDGET_NAME, WIDGET_CONFIGS FROM WIDGET_RESOURCE WHERE WIDGET_ID = ?
      get_widget_name_id_map: SELECT WIDGET_ID, WIDGET_NAME, WIDGET_CONFIGS FROM WIDGET_RESOURCE
      delete_widget_by_id: DELETE FROM WIDGET_RESOURCE WHERE WIDGET_ID = ?
      get_dashboard_by_url: SELECT URL, OWNER, NAME, DESCRIPTION, PARENT_ID, LANDING_PAGE, CONTENT FROM DASHBOARD_RESOURCE WHERE URL = ?
      get_dashboard_metadata_list: SELECT URL, OWNER, NAME, DESCRIPTION, PARENT_ID, LANDING_PAGE FROM DASHBOARD_RESOURCE
      delete_dashboard_by_url: DELETE FROM DASHBOARD_RESOURCE WHERE URL = ?
      update_dashboard_content: UPDATE DASHBOARD_RESOURCE SET NAME = ?, DESCRIPTION = ?, CONTENT = ?, PARENT_ID = ?, LANDING_PAGE = ? WHERE URL = ?
    type: PostgreSQL
    version: default
  -
    mappings:
      table_check: SELECT TOP 1 1 from {{TABLE_NAME}}
      create_dashboard_resource_table: CREATE TABLE DASHBOARD_RESOURCE (URL VARCHAR(100) NOT NULL, OWNER VARCHAR(100) NOT NULL, NAME VARCHAR(255) NOT NULL, DESCRIPTION VARCHAR(1000), PARENT_ID INTEGER NOT NULL, LANDING_PAGE VARCHAR(100), CONTENT VARBINARY(max), CONSTRAINT PK_DASHBOARD_RESOURCE PRIMARY KEY (URL,OWNER))
      create_widget_resource_table: CREATE TABLE WIDGET_RESOURCE (WIDGET_ID VARCHAR(255) NOT NULL, WIDGET_NAME VARCHAR(255) NOT NULL, WIDGET_CONFIGS VARBINARY(max), CONSTRAINT PK_WIDGET_RESOURCE PRIMARY KEY (WIDGET_ID, WIDGET_NAME))
      add_dashboard: INSERT INTO DASHBOARD_RESOURCE (URL, OWNER, NAME, DESCRIPTION, PARENT_ID , LANDING_PAGE, CONTENT) VALUES (?, ?, ?, ?, ?, ?, ?)
      add_widget_config: INSERT INTO WIDGET_RESOURCE (WIDGET_ID, WIDGET_NAME, WIDGET_CONFIGS) VALUES (?, ?, ?)
      update_widget_config: UPDATE WIDGET_RESOURCE SET WIDGET_CONFIGS = ? WHERE WIDGET_ID = ?
      get_widget_config: SELECT WIDGET_NAME, WIDGET_CONFIGS FROM WIDGET_RESOURCE WHERE WIDGET_ID = ?
      get_widget_name_id_map: SELECT WIDGET_ID, WIDGET_NAME, WIDGET_CONFIGS FROM WIDGET_RESOURCE
      delete_widget_by_id: DELETE FROM WIDGET_RESOURCE WHERE WIDGET_ID = ?
      get_dashboard_by_url: SELECT URL, OWNER, NAME, DESCRIPTION, PARENT_ID, LANDING_PAGE, CONTENT FROM DASHBOARD_RESOURCE WHERE URL = ?
      get_dashboard_metadata_list: SELECT URL, OWNER, NAME, DESCRIPTION, PARENT_ID, LANDING_PAGE FROM DASHBOARD_RESOURCE
      delete_dashboard_by_url: DELETE FROM DASHBOARD_RESOURCE WHERE URL = ?
      update_dashboard_content: UPDATE DASHBOARD_RESOURCE SET NAME = ?, DESCRIPTION = ?, CONTENT = ?, PARENT_ID = ?, LANDING_PAGE = ? WHERE URL = ?
    type: Microsoft SQL Server
    version: default
  -
    mappings:
      table_check: SELECT 1 FROM {{TABLE_NAME}} WHERE rownum=1
      create_dashboard_resource_table: CREATE TABLE DASHBOARD_RESOURCE (URL VARCHAR2(100) NOT NULL, OWNER VARCHAR2(100) NOT NULL, NAME VARCHAR2(255) NOT NULL, DESCRIPTION VARCHAR2(1000), PARENT_ID NUMBER(10) NOT NULL, LANDING_PAGE VARCHAR2(100), CONTENT BLOB, CONSTRAINT PK_DASHBOARD_RESOURCE PRIMARY KEY (URL,OWNER))
      create_widget_resource_table: CREATE TABLE WIDGET_RESOURCE (WIDGET_ID VARCHAR2(255) NOT NULL, WIDGET_NAME VARCHAR2(255) NOT NULL, WIDGET_CONFIGS BLOB, CONSTRAINT PK_WIDGET_RESOURCE PRIMARY KEY (WIDGET_ID, WIDGET_NAME))
      add_dashboard: INSERT INTO DASHBOARD_RESOURCE (URL, OWNER, NAME, DESCRIPTION, PARENT_ID , LANDING_PAGE, CONTENT) VALUES (?, ?, ?, ?, ?, ?, ?)
      add_widget_config: INSERT INTO WIDGET_RESOURCE (WIDGET_ID, WIDGET_NAME, WIDGET_CONFIGS) VALUES (?, ?, ?)
      update_widget_config: UPDATE WIDGET_RESOURCE SET WIDGET_CONFIGS = ? WHERE WIDGET_ID = ?
      get_widget_config: SELECT WIDGET_NAME, WIDGET_CONFIGS FROM WIDGET_RESOURCE WHERE WIDGET_ID = ?
      get_widget_name_id_map: SELECT WIDGET_ID, WIDGET_NAME, WIDGET_CONFIGS FROM WIDGET_RESOURCE
      delete_widget_by_id: DELETE FROM WIDGET_RESOURCE WHERE WIDGET_ID = ?
      get_dashboard_by_url: SELECT URL, OWNER, NAME, DESCRIPTION, PARENT_ID, LANDING_PAGE, CONTENT FROM DASHBOARD_RESOURCE WHERE URL = ?
      get_dashboard_metadata_list: SELECT URL, OWNER, NAME, DESCRIPTION, PARENT_ID, LANDING_PAGE FROM DASHBOARD_RESOURCE
      delete_dashboard_by_url: DELETE FROM DASHBOARD_RESOURCE WHERE URL = ?
      update_dashboard_content: UPDATE DASHBOARD_RESOURCE SET NAME = ?, DESCRIPTION = ?, CONTENT = ?, PARENT_ID = ?, LANDING_PAGE = ? WHERE URL = ?
    type: Oracle
    version: default


